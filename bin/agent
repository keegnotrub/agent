#!/usr/bin/env zsh

# Usage: agent --help
# Requires: cat, curl, jq

SKILL="${1}"

case "${SKILL}" in
    "rails")
        AGENT='a senior Ruby on Rails developer'
        ;;
    "react")
        AGENT='a senior React developer'
        ;;
    "web")
        AGENT='a senior web developer'
        ;;
    "" | "-h" | "--help")
        echo "usage: agent <skill> <command>"
        echo "\nThese are the available agent skills:"
        echo "   rails     Ruby on Rails"
        echo "   react     React"
        echo "   web       Web"
        echo "\nThese are the agent commands used in various situations:"
        echo "   ask       Ask anything"
        echo "   debug     Debug an error"
        echo "   explain   Explain code"
        echo "   improve   Improve code"
        echo "\nText should be piped to the agent for context."
        echo "   $ cat app/models/user.rb | agent rails check"
        exit 0
        ;;
    *)
        echo "agent: '${SKILL}' is not an agent skill. See 'agent --help'."
        exit 2
        ;;
esac

CMD="${2}"

case "${CMD}" in
    "ask")
        SYS="You are ${AGENT} giving expert advice."
        PROMPT="Here is the question to give expert advice on:"
        ;;
    "debug")
        SYS="You are ${AGENT} helping to debug errors."
        PROMPT="Here is an error that was received:"
        ;;
    "explain")
        SYS="You are ${AGENT} helping to explain code."
        PROMPT="Here is the code that needs to be explained:"
        ;;
    "improve")
        SYS="You are ${AGENT} helping to improve code."
        PROMPT="What's one most meaningful thing I could do to improve the quality of this code? It shouldn't be too drastic but should still improve the code."
        ;;
    "")
        echo "agent: command is required. See 'agent --help'."
        exit 2
        ;;
    *)
        
        echo "agent: '${CMD}' is not an agent command. See 'agent --help'."
        exit 2
        ;;
esac

if [[ -p /dev/stdin ]]; then
    PROMPT="${PROMPT}\n\n$(cat)"
else
    echo "agent: 'requires text piped for context. See 'agent --help'."
    exit 2
fi

curl -s -N \
  --location 'https://codestral.mistral.ai/v1/chat/completions' \
  --header 'Content-Type: application/json' \
  --header 'Accept: application/json' \
  --header "Authorization: Bearer $CODESTRAL_API_KEY" \
  --data "{
  \"model\": \"codestral-latest\",
  \"stream\": true,
  \"messages\": [
    {\"role\": \"system\", \"content\": $(printf %s ${SYS} | jq -Rs '.')},
    {\"role\": \"user\", \"content\": $(printf %s ${PROMPT} | jq -Rs '.')}
  ]
}" | jq --stream -Rrj \
        'match("data: (.*)")|.captures[0].string|select(test("DONE")|not)|fromjson|.choices[0].delta.content'
